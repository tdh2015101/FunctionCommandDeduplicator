# Automatically build the project and run any configured tests for every push
# and submitted pull request. This can help catch issues that only occur on
# certain platforms or Java versions, and provides a first line of defence
# against bad commits.

name: build
on: [pull_request, push]

jobs:
  build:
    strategy:
      matrix:
        java: [21]
        os: [ubuntu-24.04]
    runs-on: ${{ matrix.os }}
    steps:
      - name: checkout repository
        uses: actions/checkout@v4
      - name: validate gradle wrapper
        uses: gradle/actions/wrapper-validation@v4
      - name: setup jdk ${{ matrix.java }}
        uses: actions/setup-java@v4
        with:
          java-version: ${{ matrix.java }}
          distribution: "graalvm"
      - name: make gradle wrapper executable
        run: chmod +x ./gradlew && free -m
      - name: Build and Cache
        uses: burrunan/gradle-cache-action@v3
        with:
          save-generated-gradle-jars: false
          remote-build-cache-proxy-enabled: false
          gradle-distribution-sha-256-sum-warning: false
          arguments: build --parallel
          gradle-version: wrapper
      - name: capture build artifacts - common
        #if: ${{ runner.os == 'Linux' && matrix.java == '21' }}
        uses: actions/upload-artifact@v4
        with:
          name: Artifacts - Common
          path: common/build/libs/
      - name: capture build artifacts - fabric
        #if: ${{ runner.os == 'Linux' && matrix.java == '21' }}
        uses: actions/upload-artifact@v4
        with:
          name: Artifacts - Fabric
          path: fabric/build/libs/
      - name: capture build artifacts - forge
        #if: ${{ runner.os == 'Linux' && matrix.java == '21' }}
        uses: actions/upload-artifact@v4
        with:
          name: Artifacts - Forge
          path: forge/build/libs/
      - name: capture build artifacts - neoforge
        #if: ${{ runner.os == 'Linux' && matrix.java == '21' }}
        uses: actions/upload-artifact@v4
        with:
          name: Artifacts - NeoForge
          path: neoforge/build/libs/
